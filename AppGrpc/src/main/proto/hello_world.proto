// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.



//protobuf 有2个版本，语法不同，默认版本是 proto2
//如果需要 proto3，则需要在非空非注释第一行使用 syntax = "proto3" 标明版本。现在推荐使用proto3版本。
syntax = "proto3";
option java_multiple_files = true;
//这指定了我们要用于生成的 Java 类的包。如果java_package.proto 文件中没有给出明确的选项，那么默认情况下将使用 proto 包（使用“package”关键字指定）。
//但是，proto 包通常不会成为好的 Java 包，因为 proto 包不应该以反向域名开头。如果我们从这个 .proto 生成另一种语言的代码，则该java_package选项无效。
option java_package = "com.yc.appgrpc";
option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";

//proto文件上方定义了package，调用方不可以更改此路径！！！
package helloworld;

//这个是定义的服务接口
//当您构建示例时，构建过程会重新生成GreeterGrpc.java，其中包含生成的 gRPC 客户端和服务器类。
//这也会重新生成用于填充、序列化和检索我们的请求和响应类型的类。
service HelloWorld {
  rpc SayHello (HelloRequest) returns (HelloReply) {}
}


//关键字message: 代表了实体结构，由多个消息字段(field)组成。
//这个是发送的request
message HelloRequest {
  //消息字段(field): 包括数据类型、字段名、字段规则、字段唯一标识、默认值
  //数据类型：常见的原子类型都支持(在FieldDescriptor::kTypeToName中有定义)
  //字段规则：(在FieldDescriptor::kLabelToName中定义)
    //required：必须初始化字段，如果没有赋值，在数据序列化时会抛出异常
    //optional：可选字段，可以不必初始化。
    //repeated：数据可以重复(相当于java 中的Array或List)
    //字段唯一标识：序列化和反序列化将会使用到。
  //默认值：在定义消息字段时可以给出默认值。
  string name = 1;
}

//这个是收到的respond
message HelloReply {
  string message = 1;
}




